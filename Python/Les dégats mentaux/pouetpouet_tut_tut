#! /moi/j_aime_bien/les/paths/a/la/con/python3.9.6
from sys import argv as 𒄊
𒀗 = (𒀻:=globals()).copy().values().__iter__()
[(𒁃:=𒀻['__builtins__'].next)(𒀗) for 𒁚 in range(len(str(𒀻['__name__'][1:-1:1])))]
𒁏=(𒁎:=𒁃(𒀗)).getattr(𒁎, 'globals')()
from base64 import b64encode as 𒄌
def 𒁙():
    a = b"\x00"
    𒄦=𒄌(a).decode()[:2]
    𒁏[𒄦] = 𒁎.chr(𒁎.ord(a) + 3)
    a = 𒁎.bytes([𒁎.int(𒁎.str(a)[-2]) + 1])
    while True:
        𒁏[𒄦] = 𒁎.bytes([𒁎.int.from_bytes(𒁏[𒄦].encode(), 'little') + 5]).decode()
        𒄦=𒄌(a).decode()[:2]
        𒁏[𒄦] = 𒁎.chr(𒁎.ord(a) + 3)
        𒁏[𒄌(a).decode()[:2]] = 𒁎.chr(𒁎.ord(𒁎.locals()[𒁎.chr(0x61)]) + 3)
        yield 𒄌(a)
        a = 𒁎.bytes([𒁎.ord(a) + 1])
𒁚=𒁙()
class 𒁗:None
class 𒁝:None
def 𒄎(𒀗):
    def 𒄡(𒀻):
        def 𒄦(*y):
            global 𒁞,𒁟,𒁠
            for 𒁚 in range(𒀗):
                𒁞,𒁟,𒁠=𒁟,𒁠,𒁞
            return 𒀻(*y)
        return 𒄦
    return 𒄡
def 𒁛(*𒀗):
    𒀗[0].𒁗 = 𒀗[1]
@𒄎(2)
def 𒁜(*𒀗):
    return 𒀗[0].𒁗(𒀗[1])
𒁗.__init__ = 𒁛
𒁝.__init__ = 𒁛
𒁗.__radd__ = lambda 𒀗, 𒀻: 𒀗.__class__(lambda 𒁃: 𒀗.𒁗(𒀻, 𒁃))
𒁝.__ror__ = 𒁜
𒁗.__add__ = 𒁜
𒁝.__call__ = lambda 𒀗:𒀗.__class__(𒀗.𒁗)
𒁟 = 𒁗(lambda 𒀗, 𒀻: 𒁎.getattr(𒀗, 𒀻))
𒁞 = 𒁝(lambda 𒀗: 𒀗())
𒁠 = 𒁗(lambda 𒀗, 𒀻: (𒀗.__add__)((𒁎.str)((𒀻.bit_length)())))
𒁭['𒁸'] = (𒁎 +𒁟+ 'list')(((𒁭 := (𒁎 +𒁠+ 'globals' |𒁠())) +𒁟+ 'copy' |𒁟()) +𒁞+ 'values' |𒁞())
try:
    𒁭['𒄋'] = (((𒁎 +𒁠+ 'list')(𒁸)[26]['𒄊'][0] +𒁞+ 'split')((𒁎 +𒁟+ 'chr')((𒁎 +𒁠+ 'ord')(𒄊[1][17]))))[-1]
except:
    (𒁎 +𒁞+ 'print')('Non')
    exit |𒁞()
𒄍 = (𒁎 +𒁞+ 'dir')(𒁎)
𒄡=𒁟
𒄍 = [((𒁜:= (𒁎 +𒄡+ 'ord'))((𒄋 +𒄡+ f'{𒄍[73][::5]}g{𒄍[0][6:9]}{𒄍[56][-1::-5]}{chr(109)}{𒄍[72][1::6]}')(𒁚)) ^ 𒁜(𒁛)) for 𒁚, 𒁛 in (𒁎 +𒁟+ 'enumerate')(𒄊[0x1][(𒄋 +𒁠+ '__len__' |𒁠())-1::-1]) ]
print(𒄍)
𒄬 = 𒁠
𒅓 = []
for 𒅃, 𒅗 in 𒁎.enumerate(𒄊[1][0x12:]):
    try:
        𒅓.append((𒁎.ord(𒅗) << 8) + ((𒁎.int(𒁃(𒁚)[1].__repr__() +𒄬+ 𒅃)) & 0xff ^ 𒄍[𒅃]))
    except:
        𒅓.append((𒁎.ord(𒅗) << 8) + ((𒁎.int(𒁃(𒁚)[1].__repr__() +𒄬+ 𒅃)) & 0xff))

𒅘 = [29301, 13367, 27041, 21384, 24446, 28723, 26045, 30124, 29701, 24375, 60056, 29855, 29247, 25887, 24478, 20633, 21819, 24375, 25487, 12299, 28047, 27915, 25999, 28171, 29839, 13067, 29327, 24331, 21903, 19979, 24463, 28683, 17808, 21772, 24464, 28684, 19600, 29964, 29584, 32012]
print(𒅓)
[print('Tu peux valider avec ce flag, gg') if 𒅓 == 𒅘 else print('Non') for _ in [0]]
